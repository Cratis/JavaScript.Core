{"version":3,"sources":["Exception.js"],"names":[],"mappings":";;;;;;;qjBAAA;;;;;;AAIA;;;;AAEA,IAAM,WAAW,IAAI,OAAJ,EAAjB;;AAEA;;;;IAGa,S,WAAA,S;AAET;;;;AAIA,qBAAY,OAAZ,EAAqB;AAAA;;AACjB,aAAS,GAAT,CAAa,IAAb,EAAmB,OAAnB;AACH;;AAED;;;;;;;wBAGc;AACV,UAAI,SAAS,GAAT,CAAa,IAAb,CAAJ,EAAyB,OAAO,SAAS,GAAT,CAAa,IAAb,CAAP;AACzB,aAAO,EAAP;AACH;;AAED;;;;;;6BAGe;AACX,UAAI,gBAAgB,CAAC,IAAD,CAApB;AACA,WAAK,IAAI,gBAAc,CAAvB,EAA0B,gBAAc,UAAU,MAAlD,EAA0D,eAA1D;AAA2E,sBAAc,IAAd,CAAmB,UAAU,aAAV,CAAnB;AAA3E,OACA,IAAI,iBAAiB,KAAK,IAAL,CAAU,KAAV,CAAgB,IAAhB,EAAsB,aAAtB,CAArB;AACA,YAAM,IAAI,cAAJ,EAAN;AACH","file":"Exception.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Einar Ingebrigtsen. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport {TypeInfo} from \"cratis-javascript-reflection\";\n\nconst _message = new WeakMap();\n\n/**\n * Defines a base for structured exceptions \n */\nexport class Exception\n{\n    /**\n     * Initializes a new instance of {Exception}\n     * @param {message} Message to include with the exception \n     */\n    constructor(message) {\n        _message.set(this, message);\n    }\n\n    /**\n     * Get the message for the exception\n     */\n    get message() {\n        if( _message.get(this) ) return _message.get(this);\n        return \"\";\n    }\n\n    /**\n     * Throw an instance of the exception\n     */\n    static throw() {\n        let bindArguments = [null];\n        for( var argumentIndex=0; argumentIndex<arguments.length; argumentIndex++) bindArguments.push(arguments[argumentIndex]);\n        var boundException = this.bind.apply(this, bindArguments);\n        throw new boundException();\n    }\n}"],"sourceRoot":"../Source"}